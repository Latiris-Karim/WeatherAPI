to run container locally, make sure you map the port inside the container to a port on your machine;
e.g 
podman run -p 8080:80 weatherapi

pass api keys properly in the run command 
e.g 
podman run -p 8080:80 -e WEATHER_API_KEY=your_api_key_here weatherapi
------------------------------------------------------------------------
use .dockerignore always to exclude .env aswell as other not needed files, docker-compose will inject the ENV's so it has access, baking .env into image is a security risk.
-------------------------------------------------------------------------
need to use docker-compose.yml if i want to use redis server for caching my weatherapi response
how to execute it;
podman-compose up --build -> first WSL and move into project folder 
podman compose --name weather-api up --build

what is docker-compose.yml?
composes multitudes of containers that end up sharing the same network, so they can talk with each other using their defined service names

created 2 containers and lets them communicate with each other because they run on the same network, their service name resolves via DNS to a callable IP within a mutual network.


when using WSL and you want to move into a Project, always starts with cd mnt 

to understand this better you can actually move into a container with 
podman exec -it myproject_web_1 sh (get name from podman ps)
and then running a ping for example trying to reach another service it should reach

DEPLOYMENT: 

Google Cloud Memorystore would be normally used for Redis. 
in general docker-compose.yml is for local testing 

environment variable in env very helpful to have multiple setups available in code at the same time.
